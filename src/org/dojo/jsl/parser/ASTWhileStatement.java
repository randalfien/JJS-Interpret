/* Generated By:JJTree: Do not edit this line. ASTWhileStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.dojo.jsl.parser;

import cz.fit.cvut.paskaond.jsruntime.Evalable;
import cz.fit.cvut.paskaond.jsruntime.JSEnvironment;
import cz.fit.cvut.paskaond.jsruntime.builtin.primitive.JSUndefined;
import cz.fit.cvut.paskaond.jsruntime.syntax.CastUtils;
/*
 * children: [BinaryExpressionSequence, Block]
 */
public class ASTWhileStatement extends SimpleNode implements Evalable{
	public ASTWhileStatement(int id) {
		super(id);
	}

	public ASTWhileStatement(EcmaScript p, int id) {
		super(p, id);
	}


	/** Accept the visitor. **/
	public Object jjtAccept(EcmaScriptVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	@Override
	public Object evalIn(JSEnvironment env) {
		Evalable ch0 = (Evalable) children[0];
		Evalable ch1 = (Evalable) children[1];
		while(true){
			if( env.isBreakCalled() ){
				env.setBreakCalled(false);
				break;
			}
			Object conditionResult = ch0.evalIn(env);
			if( CastUtils.castToBoolean(conditionResult) == true ){
				ch1.evalIn(env);
			}else{
				break;
			}
		}
		return JSUndefined.getInstance();
	}


}
/* JavaCC - OriginalChecksum=b5b5d85031e0fb0576707c78c8a52eda (do not edit this line) */
