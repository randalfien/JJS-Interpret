/* Generated By:JJTree: Do not edit this line. ASTObjectLiteral.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.dojo.jsl.parser;

import cz.fit.cvut.paskaond.jsruntime.Evalable;
import cz.fit.cvut.paskaond.jsruntime.JSEnvironment;
import cz.fit.cvut.paskaond.jsruntime.builtin.JSObject;

public
class ASTObjectLiteral extends SimpleNode implements Evalable {
	public ASTObjectLiteral(int id) {
		super(id);
	}

	public ASTObjectLiteral(EcmaScript p, int id) {
		super(p, id);
	}


	/** Accept the visitor. **/
	public Object jjtAccept(EcmaScriptVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	@Override
	public Object evalIn(JSEnvironment env) {
		JSObject object = new JSObject("Object");
		for (int i = 0; i < children.length; i++) {
			ASTLiteralField field = (ASTLiteralField) children[i];
			object.put( field.getName(),field.getValue(env) );
		}
		return object;
	}
}
/* JavaCC - OriginalChecksum=01bbb0dd7df0ea41d9ba30e88ba85b4d (do not edit this line) */
