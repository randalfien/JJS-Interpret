/* Generated By:JJTree: Do not edit this line. ASTIfStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.dojo.jsl.parser;

import cz.fit.cvut.paskaond.jsruntime.Evalable;
import cz.fit.cvut.paskaond.jsruntime.JSEnvironment;
import cz.fit.cvut.paskaond.jsruntime.builtin.primitive.JSUndefined;
import cz.fit.cvut.paskaond.jsruntime.syntax.CastUtils;
/*
 * Children: [BooleanLiteral[true], Block, Block]
 * 
 */
public class ASTIfStatement extends SimpleNode implements Evalable {
	public ASTIfStatement(int id) {
		super(id);
	}

	public ASTIfStatement(EcmaScript p, int id) {
		super(p, id);
	}


	/** Accept the visitor. **/
	public Object jjtAccept(EcmaScriptVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	@Override
	public Object evalIn(JSEnvironment env) {
		Object conditionResult = ((Evalable) children[0]).evalIn(env);
		if( CastUtils.castToBoolean(conditionResult) == true ){
			return ((Evalable) children[1]).evalIn(env);
		}else{
			if( children.length > 2 ){
				return ((Evalable) children[2]).evalIn(env);
			}
		}
		return JSUndefined.getInstance();
	}
}
/* JavaCC - OriginalChecksum=9d3e02c8735033af3dfcfad2688a9e54 (do not edit this line) */
